name: HTMLKit Tests

on: 
  pull_request:
    branches: 
      - master
  push:
    branches:
      - master

jobs:
  check-doc-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1.2.0
      - name: Calculate Documentation Coverage
        uses: MatsMoll/swift-doc@master
        with:
          inputs: "Sources"
          output: "dcov.json"
      - name: Check Documentation Percent
        run: sudo bash Scripts/DocCoverage/check-percentage.sh dcov.json 13
        
  xenial:
    needs: check-doc-coverage
    container: 
      image: swift:5.4.3-xenial
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1.2.0
    - run: swift test
    
  bionic:
    needs: check-doc-coverage
    container: 
      image: swift:5.4.3-bionic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1.2.0
    - run: swift test
    
  release-docs:
    needs: [xenial, bionic]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1.2.0
      - name: Generate Documentation
        uses: SwiftDocOrg/swift-doc@master
        with:
          inputs: "Sources"
          module-name: HTMLKit
          output: "Documentation"
      - name: Upload Documentation to Wiki
        uses: SwiftDocOrg/github-wiki-publish-action@v1
        with:
          path: "Documentation"
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          
#  release-version:
#    needs: release-docs
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/master'
#    steps:
#      - uses: actions/checkout@v1.2.0
#      - name: Release new version
#        uses: MatsMoll/action-finch@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
#          GITHUB_SHA: ${{ secrets.GITHUB_SHA }}
